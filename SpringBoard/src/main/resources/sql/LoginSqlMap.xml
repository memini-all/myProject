<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.project.login">

	
	<!-- 아이디 체크 -->
	<select id="isExistId" parameterType="String" resultType="boolean">
		SELECT  
			IF(COUNT(*) > 0, 'true', 'false')
		FROM    
			tbl_suser
		WHERE  
			userid = #{userid} AND is_withdraw = 'N'
	</select>


	<!-- 로그인 체크 -->
	<select id="loginCheck" parameterType="loginVO" resultType="userVO">
		SELECT 
			userno
			, userid
			, userpw
			, username
			, email
			, authority
			, is_withdraw
			, loginFaile
			, islock
		FROM
			tbl_suser
		WHERE
			userid = #{userid} AND userpw = SHA2(#{userpw}, 256)
	</select>


	<!-- 로그인 실패횟수 초기화 -->
	<update id="resetFailCount" parameterType="String">
		UPDATE 
			tbl_suser 
		SET 
            loginFaile = 0
            , islock = 'N'
        WHERE 
        	userid = #{_parameter}    
	</update>


	<!-- 로그인 실패횟수 증가 -->
	<update id="plusFailCount" parameterType="String">
		UPDATE 
			tbl_suser 
		SET 
            loginFaile = loginFaile + 1
        WHERE 
        	userid = #{_parameter}    
	</update>
	
	
	<!-- 로그인 실패횟수 조회 -->
	<select id="selectLoginFailCnt" parameterType="String" resultType="Integer">
		SELECT
			loginFaile
		FROM
			tbl_suser
		WHERE 
			userid = #{_parameter} 
	</select>
	
	
	<!-- 계정 잠금여부 체크 -->
	<select id="selectAccountLock" parameterType="String" resultType="boolean">
		SELECT
			IF(islock = 'Y', 'true', 'false')
		FROM
			tbl_suser
		WHERE 
			userid = #{_parameter} 
	</select>
	
	
	<!-- 로그인 5회 실패시 계정 잠금 -->
	<update id="accountLock" parameterType="String">
		UPDATE 
			tbl_suser 
		SET 
            islock = 'Y'
        WHERE 
        	userid = #{_parameter}    
	</update>
	
	<!-- 로그인 기록 저장 -->
	<insert id="insertLoginHistory" parameterType="hashmap">
		INSERT INTO tbl_login_history
			(
				userno
				, ldate
				, conip
				, ltype
			)
		VALUES
			(
				#{userno}
				, NOW()
				, #{ip}
				, #{type}
			)
	</insert>

	
	<!-- 총 로그인 기록수 조회 -->
	<select id="selectLoginCount" parameterType="Integer" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM
			tbl_login_history
		WHERE
			userno = #{userno}
	</select>
	
	
	<!-- 로그인 기록 조회 -->
	<select id="selectLoginHistoryList" parameterType="HashMap" resultType="loginVO">
		SELECT 
			DATE_FORMAT(ldate, '%Y-%m-%d %H:%i') ldate
			, conip
			, IF(ltype = 'LOGIN', '로그인', '로그아웃') ltype
		FROM
			tbl_login_history
		WHERE
			userno = #{userno}
		ORDER BY ldate DESC	
		LIMIT 
			#{cri.pageStart}, #{cri.perPageNum}
	</select>
	
</mapper>